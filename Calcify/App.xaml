<Application x:Class="Calcify.App"
         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
         xmlns:properties="clr-namespace:Calcify.Properties"
	     xmlns:avalonEdit="http://icsharpcode.net/sharpdevelop/avalonedit"
         Startup="App_Startup" >

    <Application.Resources>
        <ResourceDictionary>
            <SolidColorBrush x:Key="DarkModernWindowBackgroundbrush" Color="#2C2C2C" />
            <SolidColorBrush x:Key="LightModernWindowBackgroundbrush" Color="#F8F8F8" />
            <SolidColorBrush x:Key="DarkModernForegroundbrush" Color="#FFFFFF" />
            <SolidColorBrush x:Key="LightModernForegroundbrush" Color="#000000" />
            <SolidColorBrush x:Key="DarkModernWindowHeaderFooterBackgroundbrush" Color="#262626" />
            <SolidColorBrush x:Key="LightModernWindowHeaderFooterBackgroundbrush" Color="#EEEEEE" />

            <Style x:Key="modernAcceptButton" TargetType="Button" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="Black" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#47B1E8" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#1975C5" />
                                </MultiDataTrigger>

                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#4CC2FF" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#0067C0" />
                                </MultiDataTrigger>

                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#42A1D2" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#3183CA" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="0.65" >
                                <Border.Style>
                                    <Style TargetType="Border" >
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#55B7EA" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="BorderBrush" Value="#55B7EA" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="ContextMenu" >
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate >
                            <Border BorderThickness="0.5" CornerRadius="4" >
                                <Border.Style>
                                    <Style TargetType="Border" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                                                <Setter Property="Background" Value="{StaticResource LightModernWindowBackgroundbrush}" />
                                                <Setter Property="BorderBrush" Value="#333333" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                                                <Setter Property="Background" Value="{StaticResource DarkModernWindowBackgroundbrush}" />
                                                <Setter Property="BorderBrush" Value="#CCCCCC" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>                                
                                <ItemsPresenter Margin="0, 4" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="MenuItem" >
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="MenuItem" >
                            <Border >
                                <Border.Style>
                                    <Style TargetType="Border" >
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#33000000" />
                                            </MultiDataTrigger>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                                    <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                                </MultiDataTrigger.Conditions>
                                                <Setter Property="Background" Value="#33FFFFFF" />
                                            </MultiDataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <Grid>
                                    <ContentPresenter ContentSource="Header" HorizontalAlignment="Stretch" Margin="5, 3" />
                                    <ContentPresenter ContentSource="Header" HorizontalAlignment="Stretch" Opacity="0" Margin="5, 0, 50, 0" />
                                </Grid>
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="RoundedButton" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="4" Background="{TemplateBinding Background}" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Left" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="ReactiveRoundedButton" TargetType="Button" BasedOn="{StaticResource RoundedButton}" >
                <Setter Property="Background" Value="Transparent" />
                <Style.Triggers>
                    <MultiDataTrigger >
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#22FFFFFF" />
                    </MultiDataTrigger>
                    <MultiDataTrigger >
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33000000" />
                    </MultiDataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="modernButton" TargetType="Button" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="White" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="Black" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <ControlTemplate.Triggers>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#323232" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#F6F6F6" />
                                </MultiDataTrigger>

                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#2D2D2D" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#FBFBFB" />
                                </MultiDataTrigger>

                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#272727" />
                                </MultiDataTrigger>
                                <MultiDataTrigger >
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                                        <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="Background" Value="#F5F5F5" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>

                            <Border Background="{TemplateBinding Background}" CornerRadius="4" BorderThickness="1" >
                                <Border.Style>
                                    <Style TargetType="Border" >
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                                                <Setter Property="BorderBrush" Value="#353535" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                                                <Setter Property="BorderBrush" Value="#EFEFEF" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Border.Style>
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="modernWindow" TargetType="Window" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Background" Value="{StaticResource DarkModernWindowBackgroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Background" Value="{StaticResource LightModernWindowBackgroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="modernHeaderFooter" TargetType="Grid" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Background" Value="{StaticResource DarkModernWindowHeaderFooterBackgroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Background" Value="{StaticResource LightModernWindowHeaderFooterBackgroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style x:Key="modernTextBlock" TargetType="TextBlock" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="TextBlock" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Label" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="avalonEdit:TextEditor" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="avalonEdit:TextEditor" x:Key="ReadOnlyAvalonEditor" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Glyphs" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Fill" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Fill" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter Property="FontUri" Value="C:\Windows\Fonts\segmdl2.ttf" />
            </Style>

            <Style TargetType="RadioButton" >
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Foreground" Value="{StaticResource DarkModernForegroundbrush}" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Foreground" Value="{StaticResource LightModernForegroundbrush}" />
                    </DataTrigger>
                </Style.Triggers>
            </Style>

            <Style TargetType="Button" x:Key="TransparentButton" >
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Grid Background="{TemplateBinding Background}" >
                                <ContentPresenter VerticalAlignment="Center" HorizontalAlignment="Center" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ChromeButton" >
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33FFFFFF" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33000000" />
                    </MultiDataTrigger>
                </Style.Triggers>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Grid Background="{TemplateBinding Background}" >
                                <ContentPresenter />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ChromeCloseButton" >
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33FF0000" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#66FF0000" />
                    </MultiDataTrigger>
                </Style.Triggers>
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Grid Background="{TemplateBinding Background}" >
                                <ContentPresenter />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="Button" x:Key="ItemButton" >
                <Style.Triggers>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33FFFFFF" />
                    </MultiDataTrigger>
                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="False" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#33000000" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#44FFFFFF" />
                    </MultiDataTrigger>

                    <MultiDataTrigger>
                        <MultiDataTrigger.Conditions>
                            <Condition Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" />
                            <Condition Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsPressed}" Value="True" />
                        </MultiDataTrigger.Conditions>
                        <Setter Property="Background" Value="#54FFFFFF" />
                    </MultiDataTrigger>
                </Style.Triggers>

                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="Button" >
                            <Border CornerRadius="4" Background="{TemplateBinding Background}" >
                                <ContentPresenter Margin="7, 0" />
                            </Border>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style TargetType="GridSplitter" >
                <Setter Property="Opacity" Value="0" />
                <Style.Triggers>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True" >
                        <Setter Property="Background" Value="#3D3D3D" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False" >
                        <Setter Property="Background" Value="#E7E7E7" />
                    </DataTrigger>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource Self}, Path=IsMouseOver}" Value="True" >
                        <DataTrigger.EnterActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" From="0" To="1" Storyboard.TargetProperty="(GridSplitter.Opacity)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.EnterActions>
                        <DataTrigger.ExitActions>
                            <BeginStoryboard>
                                <Storyboard>
                                    <DoubleAnimation Duration="0:0:0.2" From="1" To="0" Storyboard.TargetProperty="(GridSplitter.Opacity)" />
                                </Storyboard>
                            </BeginStoryboard>
                        </DataTrigger.ExitActions>
                    </DataTrigger>
                </Style.Triggers>
            </Style>
            <!--#region SCROLLBARS-->
            <Style x:Key="ScrollThumbs" TargetType="{x:Type Thumb}" >
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate>
                            <Grid x:Name="Grid" >
                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="Auto" 
                                           Height="Auto" Fill="Transparent" />
                                <Border x:Name="Rectangle1" CornerRadius="3" HorizontalAlignment="Stretch" 
                                        VerticalAlignment="Stretch" Width="Auto" Height="Auto" 
                                         >
                                    <Border.Style>
                                        <Style TargetType="Border">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="True">
                                                    <Setter Property="Background" Value="#22FFFFFF" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Source={x:Static properties:Settings.Default}, Path=DarkMode}" Value="False">
                                                    <Setter Property="Background" Value="#22000000" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                </Border>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Tag" Value="Horizontal" >
                                    <Setter TargetName="Rectangle1" Property="Width" Value="Auto" />
                                    <Setter TargetName="Rectangle1" Property="Height" Value="7" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}" >
                <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
                <Setter Property="Foreground" Value="#11FFFFFF" />
                <Setter Property="Background" Value="#11FFFFFF" />
                <Setter Property="Width" Value="5" />
                <Setter Property="Template" >
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}" >
                            <Grid x:Name="GridRoot" Width="7" Background="{x:Null}" >
                                <Track x:Name="PART_Track" Grid.Row="0" IsDirectionReversed="true" Focusable="False" >
                                    <Track.Thumb>
                                        <Thumb x:Name="Thumb" Background="{TemplateBinding Foreground}" 
                                               Style="{DynamicResource ScrollThumbs}" />
                                    </Track.Thumb>
                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton x:Name="PageUp" Command="ScrollBar.PageDownCommand" Opacity="0" Focusable="False" />
                                    </Track.IncreaseRepeatButton>
                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton x:Name="PageDown" Command="ScrollBar.PageUpCommand" Opacity="0" Focusable="False" />
                                    </Track.DecreaseRepeatButton>
                                </Track>
                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger SourceName="Thumb" Property="IsMouseOver" Value="true" >
                                    <Setter Value="#22FFFFFF" 
                                            TargetName="Thumb" Property="Background" />
                                </Trigger>
                                <Trigger SourceName="Thumb" Property="IsDragging" Value="true" >
                                    <Setter Value="#22FFFFFF" TargetName="Thumb" Property="Background" />
                                </Trigger>

                                <Trigger Property="IsEnabled" Value="false" >
                                    <Setter TargetName="Thumb" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="Orientation" Value="Horizontal" >
                                    <Setter TargetName="GridRoot" Property="LayoutTransform" >
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter TargetName="PART_Track" Property="LayoutTransform" >
                                        <Setter.Value>
                                            <RotateTransform Angle="-90" />
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Width" Value="Auto" />
                                    <Setter Property="Height" Value="12" />
                                    <Setter TargetName="Thumb" Property="Tag" Value="Horizontal" />
                                    <Setter TargetName="PageDown" Property="Command" Value="ScrollBar.PageLeftCommand" />
                                    <Setter TargetName="PageUp" Property="Command" Value="ScrollBar.PageRightCommand" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <!--#endregion-->
        </ResourceDictionary>
    </Application.Resources>
</Application>